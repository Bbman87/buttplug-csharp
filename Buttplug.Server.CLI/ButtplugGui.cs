// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: buttplug-gui.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Buttplug.Server.CLI {

  /// <summary>Holder for reflection information generated from buttplug-gui.proto</summary>
  public static partial class ButtplugGuiReflection {

    #region Descriptor
    /// <summary>File descriptor for buttplug-gui.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ButtplugGuiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJidXR0cGx1Zy1ndWkucHJvdG8SFWJ1dHRwbHVnX2d1aV9wcm90b2NvbCLm",
            "BgoKR3VpTWVzc2FnZRI6CgZndWlsb2cYASABKAsyKC5idXR0cGx1Z19ndWlf",
            "cHJvdG9jb2wuR3VpTWVzc2FnZS5HdWlMb2dIABJKCg5wcm9jZXNzc3RhcnRl",
            "ZBgCIAEoCzIwLmJ1dHRwbHVnX2d1aV9wcm90b2NvbC5HdWlNZXNzYWdlLlBy",
            "b2Nlc3NTdGFydGVkSAASRgoMcHJvY2Vzc2VuZGVkGAMgASgLMi4uYnV0dHBs",
            "dWdfZ3VpX3Byb3RvY29sLkd1aU1lc3NhZ2UuUHJvY2Vzc0VuZGVkSAASPgoF",
            "YnBsb2cYBCABKAsyLS5idXR0cGx1Z19ndWlfcHJvdG9jb2wuR3VpTWVzc2Fn",
            "ZS5CdXR0cGx1Z0xvZ0gAEkwKD2NsaWVudGNvbm5lY3RlZBgFIAEoCzIxLmJ1",
            "dHRwbHVnX2d1aV9wcm90b2NvbC5HdWlNZXNzYWdlLkNsaWVudENvbm5lY3Rl",
            "ZEgAElIKEmNsaWVudGRpc2Nvbm5lY3RlZBgGIAEoCzI0LmJ1dHRwbHVnX2d1",
            "aV9wcm90b2NvbC5HdWlNZXNzYWdlLkNsaWVudERpc2Nvbm5lY3RlZEgAEkwK",
            "D2RldmljZWNvbm5lY3RlZBgHIAEoCzIxLmJ1dHRwbHVnX2d1aV9wcm90b2Nv",
            "bC5HdWlNZXNzYWdlLkRldmljZUNvbm5lY3RlZEgAElIKEmRldmljZWRpc2Nv",
            "bm5lY3RlZBgIIAEoCzI0LmJ1dHRwbHVnX2d1aV9wcm90b2NvbC5HdWlNZXNz",
            "YWdlLkRldmljZURpc2Nvbm5lY3RlZEgAGhkKBkd1aUxvZxIPCgdtZXNzYWdl",
            "GAEgASgJGhAKDlByb2Nlc3NTdGFydGVkGg4KDFByb2Nlc3NFbmRlZBoeCgtC",
            "dXR0cGx1Z0xvZxIPCgdtZXNzYWdlGAEgASgJGiYKD0NsaWVudENvbm5lY3Rl",
            "ZBITCgtjbGllbnRfbmFtZRgBIAEoCRoUChJDbGllbnREaXNjb25uZWN0ZWQa",
            "OQoPRGV2aWNlQ29ubmVjdGVkEhMKC2RldmljZV9uYW1lGAEgASgJEhEKCWRl",
            "dmljZV9pZBgCIAEoDRonChJEZXZpY2VEaXNjb25uZWN0ZWQSEQoJZGV2aWNl",
            "X2lkGAEgASgNQgUKA21zZ0IWqgITQnV0dHBsdWcuU2VydmVyLkNMSWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Buttplug.Server.CLI.GuiMessage), global::Buttplug.Server.CLI.GuiMessage.Parser, new[]{ "Guilog", "Processstarted", "Processended", "Bplog", "Clientconnected", "Clientdisconnected", "Deviceconnected", "Devicedisconnected" }, new[]{ "Msg" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Buttplug.Server.CLI.GuiMessage.Types.GuiLog), global::Buttplug.Server.CLI.GuiMessage.Types.GuiLog.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Buttplug.Server.CLI.GuiMessage.Types.ProcessStarted), global::Buttplug.Server.CLI.GuiMessage.Types.ProcessStarted.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Buttplug.Server.CLI.GuiMessage.Types.ProcessEnded), global::Buttplug.Server.CLI.GuiMessage.Types.ProcessEnded.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Buttplug.Server.CLI.GuiMessage.Types.ButtplugLog), global::Buttplug.Server.CLI.GuiMessage.Types.ButtplugLog.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Buttplug.Server.CLI.GuiMessage.Types.ClientConnected), global::Buttplug.Server.CLI.GuiMessage.Types.ClientConnected.Parser, new[]{ "ClientName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Buttplug.Server.CLI.GuiMessage.Types.ClientDisconnected), global::Buttplug.Server.CLI.GuiMessage.Types.ClientDisconnected.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Buttplug.Server.CLI.GuiMessage.Types.DeviceConnected), global::Buttplug.Server.CLI.GuiMessage.Types.DeviceConnected.Parser, new[]{ "DeviceName", "DeviceId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Buttplug.Server.CLI.GuiMessage.Types.DeviceDisconnected), global::Buttplug.Server.CLI.GuiMessage.Types.DeviceDisconnected.Parser, new[]{ "DeviceId" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GuiMessage : pb::IMessage<GuiMessage> {
    private static readonly pb::MessageParser<GuiMessage> _parser = new pb::MessageParser<GuiMessage>(() => new GuiMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GuiMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Buttplug.Server.CLI.ButtplugGuiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuiMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuiMessage(GuiMessage other) : this() {
      switch (other.MsgCase) {
        case MsgOneofCase.Guilog:
          Guilog = other.Guilog.Clone();
          break;
        case MsgOneofCase.Processstarted:
          Processstarted = other.Processstarted.Clone();
          break;
        case MsgOneofCase.Processended:
          Processended = other.Processended.Clone();
          break;
        case MsgOneofCase.Bplog:
          Bplog = other.Bplog.Clone();
          break;
        case MsgOneofCase.Clientconnected:
          Clientconnected = other.Clientconnected.Clone();
          break;
        case MsgOneofCase.Clientdisconnected:
          Clientdisconnected = other.Clientdisconnected.Clone();
          break;
        case MsgOneofCase.Deviceconnected:
          Deviceconnected = other.Deviceconnected.Clone();
          break;
        case MsgOneofCase.Devicedisconnected:
          Devicedisconnected = other.Devicedisconnected.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuiMessage Clone() {
      return new GuiMessage(this);
    }

    /// <summary>Field number for the "guilog" field.</summary>
    public const int GuilogFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Buttplug.Server.CLI.GuiMessage.Types.GuiLog Guilog {
      get { return msgCase_ == MsgOneofCase.Guilog ? (global::Buttplug.Server.CLI.GuiMessage.Types.GuiLog) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Guilog;
      }
    }

    /// <summary>Field number for the "processstarted" field.</summary>
    public const int ProcessstartedFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Buttplug.Server.CLI.GuiMessage.Types.ProcessStarted Processstarted {
      get { return msgCase_ == MsgOneofCase.Processstarted ? (global::Buttplug.Server.CLI.GuiMessage.Types.ProcessStarted) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Processstarted;
      }
    }

    /// <summary>Field number for the "processended" field.</summary>
    public const int ProcessendedFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Buttplug.Server.CLI.GuiMessage.Types.ProcessEnded Processended {
      get { return msgCase_ == MsgOneofCase.Processended ? (global::Buttplug.Server.CLI.GuiMessage.Types.ProcessEnded) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Processended;
      }
    }

    /// <summary>Field number for the "bplog" field.</summary>
    public const int BplogFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Buttplug.Server.CLI.GuiMessage.Types.ButtplugLog Bplog {
      get { return msgCase_ == MsgOneofCase.Bplog ? (global::Buttplug.Server.CLI.GuiMessage.Types.ButtplugLog) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Bplog;
      }
    }

    /// <summary>Field number for the "clientconnected" field.</summary>
    public const int ClientconnectedFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Buttplug.Server.CLI.GuiMessage.Types.ClientConnected Clientconnected {
      get { return msgCase_ == MsgOneofCase.Clientconnected ? (global::Buttplug.Server.CLI.GuiMessage.Types.ClientConnected) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Clientconnected;
      }
    }

    /// <summary>Field number for the "clientdisconnected" field.</summary>
    public const int ClientdisconnectedFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Buttplug.Server.CLI.GuiMessage.Types.ClientDisconnected Clientdisconnected {
      get { return msgCase_ == MsgOneofCase.Clientdisconnected ? (global::Buttplug.Server.CLI.GuiMessage.Types.ClientDisconnected) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Clientdisconnected;
      }
    }

    /// <summary>Field number for the "deviceconnected" field.</summary>
    public const int DeviceconnectedFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Buttplug.Server.CLI.GuiMessage.Types.DeviceConnected Deviceconnected {
      get { return msgCase_ == MsgOneofCase.Deviceconnected ? (global::Buttplug.Server.CLI.GuiMessage.Types.DeviceConnected) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Deviceconnected;
      }
    }

    /// <summary>Field number for the "devicedisconnected" field.</summary>
    public const int DevicedisconnectedFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Buttplug.Server.CLI.GuiMessage.Types.DeviceDisconnected Devicedisconnected {
      get { return msgCase_ == MsgOneofCase.Devicedisconnected ? (global::Buttplug.Server.CLI.GuiMessage.Types.DeviceDisconnected) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Devicedisconnected;
      }
    }

    private object msg_;
    /// <summary>Enum of possible cases for the "msg" oneof.</summary>
    public enum MsgOneofCase {
      None = 0,
      Guilog = 1,
      Processstarted = 2,
      Processended = 3,
      Bplog = 4,
      Clientconnected = 5,
      Clientdisconnected = 6,
      Deviceconnected = 7,
      Devicedisconnected = 8,
    }
    private MsgOneofCase msgCase_ = MsgOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgOneofCase MsgCase {
      get { return msgCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMsg() {
      msgCase_ = MsgOneofCase.None;
      msg_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GuiMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GuiMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Guilog, other.Guilog)) return false;
      if (!object.Equals(Processstarted, other.Processstarted)) return false;
      if (!object.Equals(Processended, other.Processended)) return false;
      if (!object.Equals(Bplog, other.Bplog)) return false;
      if (!object.Equals(Clientconnected, other.Clientconnected)) return false;
      if (!object.Equals(Clientdisconnected, other.Clientdisconnected)) return false;
      if (!object.Equals(Deviceconnected, other.Deviceconnected)) return false;
      if (!object.Equals(Devicedisconnected, other.Devicedisconnected)) return false;
      if (MsgCase != other.MsgCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (msgCase_ == MsgOneofCase.Guilog) hash ^= Guilog.GetHashCode();
      if (msgCase_ == MsgOneofCase.Processstarted) hash ^= Processstarted.GetHashCode();
      if (msgCase_ == MsgOneofCase.Processended) hash ^= Processended.GetHashCode();
      if (msgCase_ == MsgOneofCase.Bplog) hash ^= Bplog.GetHashCode();
      if (msgCase_ == MsgOneofCase.Clientconnected) hash ^= Clientconnected.GetHashCode();
      if (msgCase_ == MsgOneofCase.Clientdisconnected) hash ^= Clientdisconnected.GetHashCode();
      if (msgCase_ == MsgOneofCase.Deviceconnected) hash ^= Deviceconnected.GetHashCode();
      if (msgCase_ == MsgOneofCase.Devicedisconnected) hash ^= Devicedisconnected.GetHashCode();
      hash ^= (int) msgCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (msgCase_ == MsgOneofCase.Guilog) {
        output.WriteRawTag(10);
        output.WriteMessage(Guilog);
      }
      if (msgCase_ == MsgOneofCase.Processstarted) {
        output.WriteRawTag(18);
        output.WriteMessage(Processstarted);
      }
      if (msgCase_ == MsgOneofCase.Processended) {
        output.WriteRawTag(26);
        output.WriteMessage(Processended);
      }
      if (msgCase_ == MsgOneofCase.Bplog) {
        output.WriteRawTag(34);
        output.WriteMessage(Bplog);
      }
      if (msgCase_ == MsgOneofCase.Clientconnected) {
        output.WriteRawTag(42);
        output.WriteMessage(Clientconnected);
      }
      if (msgCase_ == MsgOneofCase.Clientdisconnected) {
        output.WriteRawTag(50);
        output.WriteMessage(Clientdisconnected);
      }
      if (msgCase_ == MsgOneofCase.Deviceconnected) {
        output.WriteRawTag(58);
        output.WriteMessage(Deviceconnected);
      }
      if (msgCase_ == MsgOneofCase.Devicedisconnected) {
        output.WriteRawTag(66);
        output.WriteMessage(Devicedisconnected);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (msgCase_ == MsgOneofCase.Guilog) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Guilog);
      }
      if (msgCase_ == MsgOneofCase.Processstarted) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Processstarted);
      }
      if (msgCase_ == MsgOneofCase.Processended) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Processended);
      }
      if (msgCase_ == MsgOneofCase.Bplog) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bplog);
      }
      if (msgCase_ == MsgOneofCase.Clientconnected) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Clientconnected);
      }
      if (msgCase_ == MsgOneofCase.Clientdisconnected) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Clientdisconnected);
      }
      if (msgCase_ == MsgOneofCase.Deviceconnected) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Deviceconnected);
      }
      if (msgCase_ == MsgOneofCase.Devicedisconnected) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Devicedisconnected);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GuiMessage other) {
      if (other == null) {
        return;
      }
      switch (other.MsgCase) {
        case MsgOneofCase.Guilog:
          if (Guilog == null) {
            Guilog = new global::Buttplug.Server.CLI.GuiMessage.Types.GuiLog();
          }
          Guilog.MergeFrom(other.Guilog);
          break;
        case MsgOneofCase.Processstarted:
          if (Processstarted == null) {
            Processstarted = new global::Buttplug.Server.CLI.GuiMessage.Types.ProcessStarted();
          }
          Processstarted.MergeFrom(other.Processstarted);
          break;
        case MsgOneofCase.Processended:
          if (Processended == null) {
            Processended = new global::Buttplug.Server.CLI.GuiMessage.Types.ProcessEnded();
          }
          Processended.MergeFrom(other.Processended);
          break;
        case MsgOneofCase.Bplog:
          if (Bplog == null) {
            Bplog = new global::Buttplug.Server.CLI.GuiMessage.Types.ButtplugLog();
          }
          Bplog.MergeFrom(other.Bplog);
          break;
        case MsgOneofCase.Clientconnected:
          if (Clientconnected == null) {
            Clientconnected = new global::Buttplug.Server.CLI.GuiMessage.Types.ClientConnected();
          }
          Clientconnected.MergeFrom(other.Clientconnected);
          break;
        case MsgOneofCase.Clientdisconnected:
          if (Clientdisconnected == null) {
            Clientdisconnected = new global::Buttplug.Server.CLI.GuiMessage.Types.ClientDisconnected();
          }
          Clientdisconnected.MergeFrom(other.Clientdisconnected);
          break;
        case MsgOneofCase.Deviceconnected:
          if (Deviceconnected == null) {
            Deviceconnected = new global::Buttplug.Server.CLI.GuiMessage.Types.DeviceConnected();
          }
          Deviceconnected.MergeFrom(other.Deviceconnected);
          break;
        case MsgOneofCase.Devicedisconnected:
          if (Devicedisconnected == null) {
            Devicedisconnected = new global::Buttplug.Server.CLI.GuiMessage.Types.DeviceDisconnected();
          }
          Devicedisconnected.MergeFrom(other.Devicedisconnected);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Buttplug.Server.CLI.GuiMessage.Types.GuiLog subBuilder = new global::Buttplug.Server.CLI.GuiMessage.Types.GuiLog();
            if (msgCase_ == MsgOneofCase.Guilog) {
              subBuilder.MergeFrom(Guilog);
            }
            input.ReadMessage(subBuilder);
            Guilog = subBuilder;
            break;
          }
          case 18: {
            global::Buttplug.Server.CLI.GuiMessage.Types.ProcessStarted subBuilder = new global::Buttplug.Server.CLI.GuiMessage.Types.ProcessStarted();
            if (msgCase_ == MsgOneofCase.Processstarted) {
              subBuilder.MergeFrom(Processstarted);
            }
            input.ReadMessage(subBuilder);
            Processstarted = subBuilder;
            break;
          }
          case 26: {
            global::Buttplug.Server.CLI.GuiMessage.Types.ProcessEnded subBuilder = new global::Buttplug.Server.CLI.GuiMessage.Types.ProcessEnded();
            if (msgCase_ == MsgOneofCase.Processended) {
              subBuilder.MergeFrom(Processended);
            }
            input.ReadMessage(subBuilder);
            Processended = subBuilder;
            break;
          }
          case 34: {
            global::Buttplug.Server.CLI.GuiMessage.Types.ButtplugLog subBuilder = new global::Buttplug.Server.CLI.GuiMessage.Types.ButtplugLog();
            if (msgCase_ == MsgOneofCase.Bplog) {
              subBuilder.MergeFrom(Bplog);
            }
            input.ReadMessage(subBuilder);
            Bplog = subBuilder;
            break;
          }
          case 42: {
            global::Buttplug.Server.CLI.GuiMessage.Types.ClientConnected subBuilder = new global::Buttplug.Server.CLI.GuiMessage.Types.ClientConnected();
            if (msgCase_ == MsgOneofCase.Clientconnected) {
              subBuilder.MergeFrom(Clientconnected);
            }
            input.ReadMessage(subBuilder);
            Clientconnected = subBuilder;
            break;
          }
          case 50: {
            global::Buttplug.Server.CLI.GuiMessage.Types.ClientDisconnected subBuilder = new global::Buttplug.Server.CLI.GuiMessage.Types.ClientDisconnected();
            if (msgCase_ == MsgOneofCase.Clientdisconnected) {
              subBuilder.MergeFrom(Clientdisconnected);
            }
            input.ReadMessage(subBuilder);
            Clientdisconnected = subBuilder;
            break;
          }
          case 58: {
            global::Buttplug.Server.CLI.GuiMessage.Types.DeviceConnected subBuilder = new global::Buttplug.Server.CLI.GuiMessage.Types.DeviceConnected();
            if (msgCase_ == MsgOneofCase.Deviceconnected) {
              subBuilder.MergeFrom(Deviceconnected);
            }
            input.ReadMessage(subBuilder);
            Deviceconnected = subBuilder;
            break;
          }
          case 66: {
            global::Buttplug.Server.CLI.GuiMessage.Types.DeviceDisconnected subBuilder = new global::Buttplug.Server.CLI.GuiMessage.Types.DeviceDisconnected();
            if (msgCase_ == MsgOneofCase.Devicedisconnected) {
              subBuilder.MergeFrom(Devicedisconnected);
            }
            input.ReadMessage(subBuilder);
            Devicedisconnected = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GuiMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class GuiLog : pb::IMessage<GuiLog> {
        private static readonly pb::MessageParser<GuiLog> _parser = new pb::MessageParser<GuiLog>(() => new GuiLog());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GuiLog> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Buttplug.Server.CLI.GuiMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GuiLog() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GuiLog(GuiLog other) : this() {
          message_ = other.message_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GuiLog Clone() {
          return new GuiLog(this);
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 1;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as GuiLog);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GuiLog other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Message != other.Message) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Message.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Message);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GuiLog other) {
          if (other == null) {
            return;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Message = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ProcessStarted : pb::IMessage<ProcessStarted> {
        private static readonly pb::MessageParser<ProcessStarted> _parser = new pb::MessageParser<ProcessStarted>(() => new ProcessStarted());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ProcessStarted> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Buttplug.Server.CLI.GuiMessage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessStarted() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessStarted(ProcessStarted other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessStarted Clone() {
          return new ProcessStarted(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ProcessStarted);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ProcessStarted other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ProcessStarted other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class ProcessEnded : pb::IMessage<ProcessEnded> {
        private static readonly pb::MessageParser<ProcessEnded> _parser = new pb::MessageParser<ProcessEnded>(() => new ProcessEnded());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ProcessEnded> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Buttplug.Server.CLI.GuiMessage.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessEnded() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessEnded(ProcessEnded other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessEnded Clone() {
          return new ProcessEnded(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ProcessEnded);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ProcessEnded other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ProcessEnded other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class ButtplugLog : pb::IMessage<ButtplugLog> {
        private static readonly pb::MessageParser<ButtplugLog> _parser = new pb::MessageParser<ButtplugLog>(() => new ButtplugLog());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ButtplugLog> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Buttplug.Server.CLI.GuiMessage.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ButtplugLog() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ButtplugLog(ButtplugLog other) : this() {
          message_ = other.message_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ButtplugLog Clone() {
          return new ButtplugLog(this);
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 1;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ButtplugLog);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ButtplugLog other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Message != other.Message) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Message.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Message);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ButtplugLog other) {
          if (other == null) {
            return;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Message = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientConnected : pb::IMessage<ClientConnected> {
        private static readonly pb::MessageParser<ClientConnected> _parser = new pb::MessageParser<ClientConnected>(() => new ClientConnected());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientConnected> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Buttplug.Server.CLI.GuiMessage.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientConnected() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientConnected(ClientConnected other) : this() {
          clientName_ = other.clientName_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientConnected Clone() {
          return new ClientConnected(this);
        }

        /// <summary>Field number for the "client_name" field.</summary>
        public const int ClientNameFieldNumber = 1;
        private string clientName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ClientName {
          get { return clientName_; }
          set {
            clientName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientConnected);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientConnected other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ClientName != other.ClientName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ClientName.Length != 0) hash ^= ClientName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ClientName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ClientName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ClientName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientConnected other) {
          if (other == null) {
            return;
          }
          if (other.ClientName.Length != 0) {
            ClientName = other.ClientName;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ClientName = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientDisconnected : pb::IMessage<ClientDisconnected> {
        private static readonly pb::MessageParser<ClientDisconnected> _parser = new pb::MessageParser<ClientDisconnected>(() => new ClientDisconnected());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientDisconnected> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Buttplug.Server.CLI.GuiMessage.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientDisconnected() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientDisconnected(ClientDisconnected other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientDisconnected Clone() {
          return new ClientDisconnected(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientDisconnected);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientDisconnected other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientDisconnected other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class DeviceConnected : pb::IMessage<DeviceConnected> {
        private static readonly pb::MessageParser<DeviceConnected> _parser = new pb::MessageParser<DeviceConnected>(() => new DeviceConnected());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DeviceConnected> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Buttplug.Server.CLI.GuiMessage.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeviceConnected() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeviceConnected(DeviceConnected other) : this() {
          deviceName_ = other.deviceName_;
          deviceId_ = other.deviceId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeviceConnected Clone() {
          return new DeviceConnected(this);
        }

        /// <summary>Field number for the "device_name" field.</summary>
        public const int DeviceNameFieldNumber = 1;
        private string deviceName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeviceName {
          get { return deviceName_; }
          set {
            deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "device_id" field.</summary>
        public const int DeviceIdFieldNumber = 2;
        private uint deviceId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint DeviceId {
          get { return deviceId_; }
          set {
            deviceId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DeviceConnected);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DeviceConnected other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DeviceName != other.DeviceName) return false;
          if (DeviceId != other.DeviceId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (DeviceName.Length != 0) hash ^= DeviceName.GetHashCode();
          if (DeviceId != 0) hash ^= DeviceId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (DeviceName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DeviceName);
          }
          if (DeviceId != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(DeviceId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (DeviceName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
          }
          if (DeviceId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeviceId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DeviceConnected other) {
          if (other == null) {
            return;
          }
          if (other.DeviceName.Length != 0) {
            DeviceName = other.DeviceName;
          }
          if (other.DeviceId != 0) {
            DeviceId = other.DeviceId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                DeviceName = input.ReadString();
                break;
              }
              case 16: {
                DeviceId = input.ReadUInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class DeviceDisconnected : pb::IMessage<DeviceDisconnected> {
        private static readonly pb::MessageParser<DeviceDisconnected> _parser = new pb::MessageParser<DeviceDisconnected>(() => new DeviceDisconnected());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DeviceDisconnected> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Buttplug.Server.CLI.GuiMessage.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeviceDisconnected() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeviceDisconnected(DeviceDisconnected other) : this() {
          deviceId_ = other.deviceId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeviceDisconnected Clone() {
          return new DeviceDisconnected(this);
        }

        /// <summary>Field number for the "device_id" field.</summary>
        public const int DeviceIdFieldNumber = 1;
        private uint deviceId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint DeviceId {
          get { return deviceId_; }
          set {
            deviceId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DeviceDisconnected);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DeviceDisconnected other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DeviceId != other.DeviceId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (DeviceId != 0) hash ^= DeviceId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (DeviceId != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(DeviceId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (DeviceId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeviceId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DeviceDisconnected other) {
          if (other == null) {
            return;
          }
          if (other.DeviceId != 0) {
            DeviceId = other.DeviceId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                DeviceId = input.ReadUInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
